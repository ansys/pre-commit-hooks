[build-system]
requires = [
    "setuptools>=42.0",
    "GitPython==3.1.44",
    "Jinja2==3.1.6",
    "reuse==5.0.2",
    "requests==2.32.4",
    "semver==3.0.4",
    "toml==0.10.2",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "ansys-pre-commit-hooks"
dynamic = ["version", "classifiers", "description", "readme", "scripts"]
requires-python = ">=3.10,<4"
license = "MIT"
license-files = ["LICENSE"]
authors = [{ name = "ANSYS, Inc.", email = "pyansys.core@ansys.com" }]
maintainers = [{ name = "ANSYS, Inc.", email = "pyansys.core@ansys.com" }]
dependencies = [
    "GitPython==3.1.44",
    "importlib-metadata==8.7.0",
    "Jinja2==3.1.6",
    "reuse==5.0.2",
    "requests==2.32.4",
    "semver==3.0.4",
    "toml==0.10.2",
]

[tool.setuptools.dynamic]
version = {file = "src/ansys/pre_commit_hooks/VERSION"}
readme = {file = ["README.rst"]}
description = {file = "A Python wrapper to create Ansys-tailored pre-commit hooks"}
classifiers = {file = """
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
"""}

[project.optional-dependencies]
doc = [
    "ansys-sphinx-theme[autoapi]==1.5.2",
    "numpydoc==1.8.0",
    "sphinx==8.2.3",
    "sphinx-autodoc-typehints==3.1.0",
    "sphinx-copybutton==0.5.1",
    "sphinx_design==0.6.1",
]
tests = [
    "pytest==8.4.1",
    "pytest-cov==6.1.1",
]

[project.urls]
Source = "https://github.com/ansys/pre-commit-hooks/"
Issues = "https://github.com/ansys/pre-commit-hooks/issues"
Discussions = "https://github.com/ansys/pre-commit-hooks/discussions"
Documentation = "https://pre-commit-hooks.docs.pyansys.com"
Releases = "https://github.com/ansys/pre-commit-hooks/releases"
Changelog = "https://github.com/ansys/pre-commit-hooks/blob/main/doc/source/changelog.rst"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
src_paths = ["doc", "src", "tests"]

[tool.codespell]
ignore-words = "doc/styles/config/vocabularies/ANSYS/accept.txt"

[tool.coverage.run]
source = ["ansys.pre_commit_hooks"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "7.1"
addopts = "--cov=ansys.pre_commit_hooks --cov-report term-missing -vv"
testpaths = [
    "tests",
]
markers = [
    "add_license_headers: marks tests for add-license-headers hook",
    "tech_review: marks tests for tech-review hook",
]

[tool.towncrier]
package = "ansys.pre_commit_hooks"
directory = "doc/changelog.d"
filename = "doc/source/changelog.rst"
start_string = ".. towncrier release notes start\n"
template = "doc/changelog.d/changelog_template.jinja"
title_format = "`{version} <https://github.com/ansys/pre-commit-hooks/releases/tag/v{version}>`_ - {project_date}"
issue_format = "`#{issue} <https://github.com/ansys/pre-commit-hooks/pull/{issue}>`_"

[[tool.towncrier.type]]
directory = "added"
name = "Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "dependencies"
name = "Dependencies"
showcontent = true

[[tool.towncrier.type]]
directory = "miscellaneous"
name = "Miscellaneous"
showcontent = true

[[tool.towncrier.type]]
directory = "documentation"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "maintenance"
name = "Maintenance"
showcontent = true

[[tool.towncrier.type]]
directory = "test"
name = "Test"
showcontent = true
